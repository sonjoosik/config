# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Default Options
# -------------------------------------------------------------------
set-option -g mouse on
set-option -g monitor-activity on
set-option -g allow-rename off
set-option -g renumber-windows on
set-option -g base-index 1
set-option -g history-limit 10000
set-option -g buffer-limit 100
set-option -g repeat-time 1000
set-window-option -g pane-base-index 1
set-window-option -g mode-keys vi
set-window-option -g aggressive-resize on

# To prevent ESC holding on vi
set-option -s escape-time 0

# Unbind keys
unbind-key C-b
unbind-key .
unbind-key ,
unbind-key m
unbind-key y

# For better using prefix key
set-option -g prefix C-a
bind-key a send-prefix
bind-key C-a last-window

# For vim plugin event trigger
set-option -g focus-events on

# Set the terminal type so colors get rendered correctly
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256col*:Tc"

# Set shell
set-option -g default-shell "$SHELL"

#### FZF integration
bind-key 0 run "tmux split-window -p 40 'bash -ci ftpane'"

#### KEY BINDINGS

# ctrl-r: Reload tmux config
#bind-key r source-file ~/.tmux.conf \; display 'Config reloaded.'

## SESSION / CLIENT
bind-key N command-prompt 'rename-session %%'
bind-key C new-session

# Ctrl-Alt-[jk] : select client
bind-key -n C-M-j switch-client -n \; refresh-client -S
bind-key -n C-M-k switch-client -p \; refresh-client -S

## WINDOW
bind-key n command-prompt 'rename-window %%'
bind-key c new-window -c "#{pane_current_path}"
bind-key Q confirm kill-window

# Ctrl-Alt-[hl] : select window
bind-key C-M-h previous-window
bind-key C-M-l next-window
bind-key -n C-M-h previous-window
bind-key -n C-M-l next-window

# Alt-Shift-[hl] : swap window
bind-key -n M-H run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys M-H) || tmux swap-window -t :- -d"
bind-key -n M-L run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys M-L) || tmux swap-window -t :+ -d"

## PANE
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key q confirm kill-pane
bind-key C-y set-window-option synchronize-panes \; display 'Synchronize panes toggled.'
bind-key enter next-layout

# Ctrl-[,.] : swap pane 
bind-key , swap-pane -U
bind-key . swap-pane -D
bind-key -n C-, run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-,) || tmux swap-pane -D"
bind-key -n C-. run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-.) || tmux swap-pane -U"

# Ctrl-[hjkl] : select pane
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-key C-h ) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-key C-j ) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-key C-k ) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-key C-l ) || tmux select-pane -R"

# alt-[hjkl] : resize pane
bind-key M-h resize-pane -L 5
bind-key M-j resize-pane -D 5
bind-key M-k resize-pane -U 5 
bind-key M-l resize-pane -R 5
bind-key -n M-h resize-pane -L 5
bind-key -n M-j resize-pane -D 5
bind-key -n M-k resize-pane -U 5
bind-key -n M-l resize-pane -R 5

bind-key ! break-pane -d -n _hidden_pane
bind-key @ join-pane -s $.1

## COPY MODE

# Make Home and End keys work in copy mode
bind-key -T copy-mode-vi H send-key '^'
bind-key -T copy-mode-vi L send-key '$'
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

## COLOR

# default statusbar colors
set -g status-fg green
set -g status-bg black

## PLUGINS
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-copycat'
set-option -g @plugin 'tmux-plugins/tmux-open'
set-option -g @plugin 'christoomey/vim-tmux-navigator'
set-option -g @plugin 'sainnhe/tmux-fzf'

run '~/.tmux/plugins/tpm/tpm'

# =====================================
# ===         Clipboard             ===
# =====================================
set -g set-clipboard on
# this for OSC52 in nested tmux session
set -ga terminal-overrides ',xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007'
set -ga terminal-overrides ',screen*:XT:Ms=\E]52;%p1%s;%p2%s\007'

# =====================================
# ===           Theme               ===
# =====================================

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

## For Nested Session
# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# Session is considered to be remote when we ssh into host
#if-shell 'test -n "$SSH_CLIENT"' \
#    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
